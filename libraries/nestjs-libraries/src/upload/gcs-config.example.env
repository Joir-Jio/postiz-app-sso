# GCS Storage Configuration Example
# Copy this file to your .env and adjust values as needed

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# Set storage provider to use GCS
STORAGE_PROVIDER=gcs

# Your Google Cloud Project ID
GCS_PROJECT_ID=your-gcs-project-id

# The name of your GCS bucket
GCS_BUCKET_NAME=your-bucket-name

# =============================================================================
# AUTHENTICATION (Choose ONE method)
# =============================================================================

# Method 1: Service Account Key File (Recommended for production)
GCS_KEY_FILENAME=/path/to/your/service-account-key.json

# Method 2: Service Account Credentials as JSON string
# GCS_CREDENTIALS={"type":"service_account","project_id":"your-project","private_key_id":"...","private_key":"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n","client_email":"your-service@your-project.iam.gserviceaccount.com","client_id":"...","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/your-service%40your-project.iam.gserviceaccount.com"}

# Method 3: Application Default Credentials (for GCP environments)
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# Google Cloud region (improves performance for regional buckets)
GCS_REGION=us-central1

# Custom public base URL for your files (if using CDN)
# GCS_PUBLIC_BASE_URL=https://cdn.yourdomain.com

# =============================================================================
# FILE REFERENCE SETTINGS
# =============================================================================

# Enable file referencing (allows zero-upload file access)
GCS_ALLOW_FILE_REFERENCE=true

# Maximum file size for referenced files (500MB = 524288000 bytes)
GCS_MAX_FILE_SIZE=524288000

# Signed URL expiry time in seconds (3600 = 1 hour)
GCS_SIGNED_URL_EXPIRY=3600

# Allowed path patterns (JSON array of regex patterns)
# Default patterns support various user bucket structures
GCS_ALLOWED_PATH_PATTERNS=["^[a-zA-Z0-9_-]+-bucket\/[a-zA-Z0-9_-]+(-DEV)?\/\\d+\/[^\/]+\\.[a-zA-Z0-9]+$","^[a-zA-Z0-9_-]+-bucket\/\\d+\/[^\/]+\\.[a-zA-Z0-9]+$","^[a-zA-Z0-9_-]+-bucket\/[^\/]+\\.[a-zA-Z0-9]+$"]

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================

# Enable caching for better performance
GCS_ENABLE_CACHING=true

# Cache control max age for uploaded files (86400 = 1 day)
GCS_CACHE_MAX_AGE=86400

# Maximum number of retries for failed operations
GCS_MAX_RETRIES=3

# Request timeout in milliseconds (30000 = 30 seconds)
GCS_REQUEST_TIMEOUT=30000

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# For development, you might want more permissive settings:
# GCS_ALLOW_FILE_REFERENCE=true
# GCS_MAX_FILE_SIZE=104857600  # 100MB for faster testing
# GCS_SIGNED_URL_EXPIRY=7200   # 2 hours for easier debugging
# GCS_MAX_RETRIES=1            # Faster failure for development
# GCS_REQUEST_TIMEOUT=10000    # 10 seconds for development

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# For production, use more conservative settings:
# GCS_MAX_FILE_SIZE=524288000  # 500MB
# GCS_SIGNED_URL_EXPIRY=3600   # 1 hour
# GCS_ENABLE_CACHING=true
# GCS_CACHE_MAX_AGE=86400      # 1 day
# GCS_MAX_RETRIES=5            # More retries for reliability
# GCS_REQUEST_TIMEOUT=60000    # 1 minute for large files

# =============================================================================
# SECURITY CONSIDERATIONS
# =============================================================================

# 1. Keep your service account key file secure and never commit it to git
# 2. Use environment-specific service accounts (dev, staging, prod)
# 3. Grant minimal necessary permissions (Storage Object Admin)
# 4. Regularly rotate your service account keys
# 5. Monitor GCS access logs for unusual activity
# 6. Use signed URLs instead of making files publicly accessible
# 7. Implement proper path validation patterns for your use case

# =============================================================================
# COST OPTIMIZATION TIPS
# =============================================================================

# 1. Use GCS lifecycle policies to automatically delete old files
# 2. Choose the appropriate storage class (Standard, Nearline, Coldline)
# 3. Enable caching to reduce API calls
# 4. Use file referencing to avoid duplicate uploads
# 5. Monitor your GCS usage and costs in Google Cloud Console
# 6. Consider using a CDN for frequently accessed files