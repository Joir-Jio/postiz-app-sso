import { PrismaRepository } from '@gitroom/nestjs-libraries/database/prisma/prisma.service';
import { AutopostDto } from '@gitroom/nestjs-libraries/dtos/autopost/autopost.dto';
export declare class AutopostRepository {
    private _autoPost;
    constructor(_autoPost: PrismaRepository<'autoPost'>);
    getTotal(orgId: string): import(".prisma/client").Prisma.PrismaPromise<number>;
    getAutoposts(orgId: string): import(".prisma/client").Prisma.PrismaPromise<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        organizationId: string;
        content: string | null;
        active: boolean;
        title: string;
        integrations: string;
        url: string;
        lastUrl: string;
        onSlot: boolean;
        syncLast: boolean;
        addPicture: boolean;
        generateContent: boolean;
    }[]>;
    deleteAutopost(orgId: string, id: string): import(".prisma/client").Prisma.Prisma__AutoPostClient<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        organizationId: string;
        content: string | null;
        active: boolean;
        title: string;
        integrations: string;
        url: string;
        lastUrl: string;
        onSlot: boolean;
        syncLast: boolean;
        addPicture: boolean;
        generateContent: boolean;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import(".prisma/client").Prisma.PrismaClientOptions>;
    getAutopost(id: string): import(".prisma/client").Prisma.Prisma__AutoPostClient<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        organizationId: string;
        content: string | null;
        active: boolean;
        title: string;
        integrations: string;
        url: string;
        lastUrl: string;
        onSlot: boolean;
        syncLast: boolean;
        addPicture: boolean;
        generateContent: boolean;
    }, null, import("@prisma/client/runtime/library").DefaultArgs, import(".prisma/client").Prisma.PrismaClientOptions>;
    updateUrl(id: string, url: string): import(".prisma/client").Prisma.Prisma__AutoPostClient<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        organizationId: string;
        content: string | null;
        active: boolean;
        title: string;
        integrations: string;
        url: string;
        lastUrl: string;
        onSlot: boolean;
        syncLast: boolean;
        addPicture: boolean;
        generateContent: boolean;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import(".prisma/client").Prisma.PrismaClientOptions>;
    changeActive(orgId: string, id: string, active: boolean): import(".prisma/client").Prisma.Prisma__AutoPostClient<{
        id: string;
        createdAt: Date;
        updatedAt: Date;
        deletedAt: Date | null;
        organizationId: string;
        content: string | null;
        active: boolean;
        title: string;
        integrations: string;
        url: string;
        lastUrl: string;
        onSlot: boolean;
        syncLast: boolean;
        addPicture: boolean;
        generateContent: boolean;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, import(".prisma/client").Prisma.PrismaClientOptions>;
    createAutopost(orgId: string, body: AutopostDto, id?: string): Promise<{
        id: string;
        active: boolean;
    }>;
}
