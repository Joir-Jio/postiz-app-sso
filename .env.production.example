# Production Environment Variables Template for Postiz SSO
# Copy this file to .env.production and fill in the actual values
# NEVER commit production secrets to version control

# ============================================================================
# Application Configuration
# ============================================================================
NODE_ENV=production
VERSION=1.0.0

# Domain Configuration
DOMAIN=yourdomain.com
FRONTEND_URL=https://yourdomain.com
NEXT_PUBLIC_BACKEND_URL=https://api.yourdomain.com
ACME_EMAIL=admin@yourdomain.com

# Port Configuration (for local testing only)
FRONTEND_PORT=4200
BACKEND_PORT=3000

# ============================================================================
# Security Configuration
# ============================================================================

# JWT Secret (generate with: openssl rand -hex 32)
JWT_SECRET=your-super-secret-jwt-key-here-32-chars-minimum

# Encryption Key (generate with: openssl rand -hex 32)
ENCRYPTION_KEY=your-encryption-key-32-chars-minimum-here

# Session Secret (generate with: openssl rand -hex 32)
SESSION_SECRET=your-session-secret-32-chars-minimum-here

# Security Settings
NOT_SECURED=false
ENABLE_CORS=true
ENABLE_HELMET=true
ENABLE_RATE_LIMITING=true

# ============================================================================
# Database Configuration (AWS RDS)
# ============================================================================

# Database Connection
DATABASE_URL=postgresql://username:password@your-rds-endpoint:5432/postiz
DB_NAME=postiz
DB_USER=postiz_user
DB_PASSWORD=your-secure-database-password
DB_HOST=your-rds-endpoint.region.rds.amazonaws.com
DB_PORT=5432

# Connection Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=10

# ============================================================================
# Redis Configuration (AWS ElastiCache)
# ============================================================================

# Redis Connection
REDIS_URL=redis://your-elasticache-endpoint:6379
REDIS_HOST=your-elasticache-endpoint.region.cache.amazonaws.com
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password
REDIS_DB=0

# Redis Settings
REDIS_TTL=3600
REDIS_MAX_RETRIES=3

# ============================================================================
# AWS Configuration
# ============================================================================

# AWS Credentials (use IAM roles in production)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

# S3 Configuration
AWS_S3_BUCKET=postiz-media-production
AWS_S3_REGION=us-east-1

# CloudWatch Logging
AWS_CLOUDWATCH_LOG_GROUP=/aws/ecs/postiz
AWS_CLOUDWATCH_LOG_STREAM=postiz-app

# ============================================================================
# Google Cloud Storage Configuration
# ============================================================================

# GCS Settings
GCS_BUCKET_NAME=postiz-media-gcs-production
GOOGLE_APPLICATION_CREDENTIALS=/app/config/gcs-service-account.json
GOOGLE_CLOUD_PROJECT_ID=your-gcp-project-id

# ============================================================================
# Social Media API Configuration
# ============================================================================

# Twitter/X API
TWITTER_CLIENT_ID=your-twitter-client-id
TWITTER_CLIENT_SECRET=your-twitter-client-secret
TWITTER_BEARER_TOKEN=your-twitter-bearer-token

# Facebook/Meta API
FACEBOOK_CLIENT_ID=your-facebook-app-id
FACEBOOK_CLIENT_SECRET=your-facebook-app-secret
FACEBOOK_ACCESS_TOKEN=your-facebook-access-token

# LinkedIn API
LINKEDIN_CLIENT_ID=your-linkedin-client-id
LINKEDIN_CLIENT_SECRET=your-linkedin-client-secret

# YouTube API
YOUTUBE_CLIENT_ID=your-youtube-client-id
YOUTUBE_CLIENT_SECRET=your-youtube-client-secret

# Instagram API
INSTAGRAM_CLIENT_ID=your-instagram-client-id
INSTAGRAM_CLIENT_SECRET=your-instagram-client-secret

# TikTok API
TIKTOK_CLIENT_ID=your-tiktok-client-id
TIKTOK_CLIENT_SECRET=your-tiktok-client-secret

# ============================================================================
# Email Configuration
# ============================================================================

# SMTP Settings
SMTP_HOST=smtp.amazonaws.com
SMTP_PORT=587
SMTP_SECURE=true
SMTP_USER=your-ses-smtp-username
SMTP_PASS=your-ses-smtp-password
FROM_EMAIL=noreply@yourdomain.com

# SendGrid (alternative)
SENDGRID_API_KEY=your-sendgrid-api-key

# ============================================================================
# Monitoring and Logging
# ============================================================================

# Sentry Error Tracking
SENTRY_DSN=https://your-sentry-dsn@o123456.ingest.sentry.io/123456
SENTRY_ENVIRONMENT=production
SENTRY_RELEASE=1.0.0

# New Relic APM
NEW_RELIC_LICENSE_KEY=your-newrelic-license-key
NEW_RELIC_APP_NAME=Postiz-SSO-Production

# DataDog (alternative)
DD_API_KEY=your-datadog-api-key
DD_SITE=datadoghq.com

# ============================================================================
# Feature Flags
# ============================================================================

# SSO Features
ENABLE_SSO=true
ENABLE_EXTERNAL_PLATFORM_AUTH=true
ENABLE_MULTI_TENANT=true

# Media Features
ENABLE_GCS_MEDIA=true
ENABLE_S3_MEDIA=true
ENABLE_MEDIA_PROCESSING=true

# AI Features
ENABLE_AI_SUGGESTIONS=true
OPENAI_API_KEY=your-openai-api-key

# ============================================================================
# Performance and Scaling
# ============================================================================

# Node.js Performance
NODE_OPTIONS=--max-old-space-size=2048
UV_THREADPOOL_SIZE=16

# Queue Configuration
QUEUE_CONCURRENCY=5
QUEUE_MAX_ATTEMPTS=3
QUEUE_DELAY=5000

# Cache Settings
CACHE_TTL=300
CACHE_MAX_ITEMS=10000

# ============================================================================
# SSL/TLS Configuration
# ============================================================================

# SSL Settings (for custom certificates)
SSL_CERT_PATH=/app/ssl/cert.pem
SSL_KEY_PATH=/app/ssl/key.pem
SSL_CA_PATH=/app/ssl/ca.pem

# ============================================================================
# Development and Testing (remove in production)
# ============================================================================

# Debug Settings (set to false in production)
DEBUG=false
ENABLE_DEBUG_LOGS=false
ENABLE_API_DOCS=false

# Testing (remove in production)
TEST_DATABASE_URL=postgresql://test:test@localhost:5433/postiz_test